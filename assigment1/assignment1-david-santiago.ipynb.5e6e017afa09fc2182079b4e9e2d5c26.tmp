# Bivariate Gaussian classifier using the best features
# Find the index of the column "Height" in the feature_names list
ft1 = list(feature_names).index("Height")

# Find the index of the column "Shell weight" in the feature_names list
ft2 = list(feature_names).index("Shell weight")

# Select the columns corresponding to the two best features
X_tr_fts = X_train[:, [ft1, ft2]]
X_tst_fts = X_test[:, [ft1, ft2]]

# Initialize and fit the Gaussian classifier using the training data
clf = GaussianClassifier(reject_lambda=0.2)
clf.fit(X_tr_fts, y_train)

# Decision boundary with real covariance matrix
plot_decision_regions(
    X_tst_fts,
    y_test,
    clf,
    resolution=0.05,
    title="Decision regions - Actual Σ & Rejection with λ=0.2",
)
