# bivariate gaussian classifier with best features
ft1 = list(feature_names).index("Height")  # index of "Height" feature
ft2 = list(feature_names).index("Shell weight")  # index of "Shell weight" feature

X_train_fts = X_train[
    :, [ft1, ft2]
]  # get training data with only the two best features
X_test_fts = X_test[:, [ft1, ft2]]  # get testing data with only the two best features

# train Gaussian classifier on the training data
clf = GaussianClassifier()
clf.fit(X_train_fts, y_train)

unique_var = (
    X_train_fts.var()
)  # calculate the variance of the two features in the training data
clf.cov = np.stack(
    [np.diag([unique_var, unique_var]) for _ in range(2)], 0
)  # set the covariance matrix of the classifier

# plot decision regions for the test data using the trained classifier
plot_decision_regions(
    X_test_fts, y_test, clf, resolution=0.05, title="Decision regions - Σ=σI assumption"
)
